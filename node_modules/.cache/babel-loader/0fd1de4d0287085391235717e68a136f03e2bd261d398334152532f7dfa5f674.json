{"ast":null,"code":"import _objectSpread from\"C:/Users/mukul singh/bill/bill/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState}from\"react\";import TodoForm from\"./TodoForm\";import Todos from\"./Todos\";import MonthlyIncomeChart from\"./MonthlyIncomeChart\";import{ToastContainer}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.min.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[todos,setTodos]=useState([]);const[sortType,setSortType]=useState(\"all\");// Default sorting: all types\nconst[monthlyBudget,setMonthlyBudget]=useState(0);// User-defined monthly budget\nconst[maxBudget,setMaxBudget]=useState(0);// User-defined maximum budget\nconst[selectedBills,setSelectedBills]=useState([]);// Bills to highlight for minimum budget\nconst[maxSelectedBills,setMaxSelectedBills]=useState([]);// Bills to highlight for max budget\nconst addTodo=newTodo=>{setTodos(prevState=>[...prevState,newTodo]);};const removeTodo=id=>{setTodos(prevState=>prevState.filter(todo=>todo.id!==id));};const editTodo=(id,updatedTodo)=>{setTodos(prevState=>prevState.map(todo=>todo.id===id?_objectSpread(_objectSpread({},todo),updatedTodo):todo));};const processDataForGraph=()=>{const data={};// Filter by type if a specific type is selected\nconst filteredTodos=sortType===\"all\"?todos:todos.filter(todo=>todo.type===sortType);filteredTodos.forEach(todo=>{const date=new Date(todo.date);const key=\"\".concat(date.getMonth()+1,\"/\").concat(date.getFullYear());// Group by month\ndata[key]=(data[key]||0)+todo.price;});return data;};const calculateMinimumBills=()=>{const filteredTodos=sortType===\"all\"?todos:todos.filter(todo=>todo.type===sortType);// Sort bills by price in ascending order\nconst sortedTodos=[...filteredTodos].sort((a,b)=>a.price-b.price);let total=0;const selected=[];for(let i=0;i<sortedTodos.length;i++){if(total+sortedTodos[i].price<=monthlyBudget){total+=sortedTodos[i].price;selected.push(sortedTodos[i].id);// Track selected bills\n}else{break;// Stop adding more bills\n}}setSelectedBills(selected);// Highlight selected bills\n};const calculateMaximumBills=()=>{const filteredTodos=sortType===\"all\"?todos:todos.filter(todo=>todo.type===sortType);// Sort bills by price in ascending order\nconst sortedTodos=[...filteredTodos].sort((a,b)=>a.price-b.price);let total=0;const selected=[];for(let i=0;i<sortedTodos.length;i++){if(total+sortedTodos[i].price<=maxBudget){total+=sortedTodos[i].price;selected.push(sortedTodos[i].id);// Track selected bills\n}else{break;// Stop adding more bills\n}}setMaxSelectedBills(selected);// Highlight selected bills for max budget\n};const uniqueTypes=[...new Set(todos.map(todo=>todo.type))];// Get unique types\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(ToastContainer,{}),/*#__PURE__*/_jsx(\"h1\",{className:\"main-title\",children:\"Billing Dashboard\"}),/*#__PURE__*/_jsx(TodoForm,{addTodo:addTodo}),/*#__PURE__*/_jsx(\"div\",{className:\"total-price-box\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"Total Income: $\",todos.reduce((total,todo)=>total+todo.price,0).toFixed(2)]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-sort-box\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Filter by Type:\",/*#__PURE__*/_jsxs(\"select\",{value:sortType,onChange:e=>setSortType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All\"}),uniqueTypes.map(type=>/*#__PURE__*/_jsx(\"option\",{value:type,children:type},type))]})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Monthly Budget:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:monthlyBudget,onChange:e=>setMonthlyBudget(parseFloat(e.target.value)||0),placeholder:\"Enter budget\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:calculateMinimumBills,className:\"highlight-btn\",children:\"Calculate Minimum Bills\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Max Budget:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:maxBudget,onChange:e=>setMaxBudget(parseFloat(e.target.value)||0),placeholder:\"Enter max budget\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:calculateMaximumBills,className:\"highlight-btn max\",children:\"Calculate Max Bills\"})]}),/*#__PURE__*/_jsx(Todos,{todos:todos.filter(todo=>sortType===\"all\"||todo.type===sortType),removeTodo:removeTodo,editTodo:editTodo,selectedBills:selectedBills,maxSelectedBills:maxSelectedBills}),/*#__PURE__*/_jsx(MonthlyIncomeChart,{incomeData:processDataForGraph()})]});}export default App;","map":{"version":3,"names":["useState","TodoForm","Todos","MonthlyIncomeChart","ToastContainer","jsx","_jsx","jsxs","_jsxs","App","todos","setTodos","sortType","setSortType","monthlyBudget","setMonthlyBudget","maxBudget","setMaxBudget","selectedBills","setSelectedBills","maxSelectedBills","setMaxSelectedBills","addTodo","newTodo","prevState","removeTodo","id","filter","todo","editTodo","updatedTodo","map","_objectSpread","processDataForGraph","data","filteredTodos","type","forEach","date","Date","key","concat","getMonth","getFullYear","price","calculateMinimumBills","sortedTodos","sort","a","b","total","selected","i","length","push","calculateMaximumBills","uniqueTypes","Set","className","children","reduce","toFixed","value","onChange","e","target","parseFloat","placeholder","onClick","incomeData"],"sources":["C:/Users/mukul singh/bill/bill/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todos from \"./Todos\";\nimport MonthlyIncomeChart from \"./MonthlyIncomeChart\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nfunction App() {\n    const [todos, setTodos] = useState([]);\n    const [sortType, setSortType] = useState(\"all\"); // Default sorting: all types\n    const [monthlyBudget, setMonthlyBudget] = useState(0); // User-defined monthly budget\n    const [maxBudget, setMaxBudget] = useState(0); // User-defined maximum budget\n    const [selectedBills, setSelectedBills] = useState([]); // Bills to highlight for minimum budget\n    const [maxSelectedBills, setMaxSelectedBills] = useState([]); // Bills to highlight for max budget\n\n    const addTodo = (newTodo) => {\n        setTodos((prevState) => [...prevState, newTodo]);\n    };\n\n    const removeTodo = (id) => {\n        setTodos((prevState) => prevState.filter((todo) => todo.id !== id));\n    };\n\n    const editTodo = (id, updatedTodo) => {\n        setTodos((prevState) =>\n            prevState.map((todo) => (todo.id === id ? { ...todo, ...updatedTodo } : todo))\n        );\n    };\n\n    const processDataForGraph = () => {\n        const data = {};\n\n        // Filter by type if a specific type is selected\n        const filteredTodos = sortType === \"all\" ? todos : todos.filter((todo) => todo.type === sortType);\n\n        filteredTodos.forEach((todo) => {\n            const date = new Date(todo.date);\n            const key = `${date.getMonth() + 1}/${date.getFullYear()}`; // Group by month\n            data[key] = (data[key] || 0) + todo.price;\n        });\n\n        return data;\n    };\n\n    const calculateMinimumBills = () => {\n        const filteredTodos = sortType === \"all\" ? todos : todos.filter((todo) => todo.type === sortType);\n\n        // Sort bills by price in ascending order\n        const sortedTodos = [...filteredTodos].sort((a, b) => a.price - b.price);\n\n        let total = 0;\n        const selected = [];\n\n        for (let i = 0; i < sortedTodos.length; i++) {\n            if (total + sortedTodos[i].price <= monthlyBudget) {\n                total += sortedTodos[i].price;\n                selected.push(sortedTodos[i].id); // Track selected bills\n            } else {\n                break; // Stop adding more bills\n            }\n        }\n\n        setSelectedBills(selected); // Highlight selected bills\n    };\n\n    const calculateMaximumBills = () => {\n        const filteredTodos = sortType === \"all\" ? todos : todos.filter((todo) => todo.type === sortType);\n\n        // Sort bills by price in ascending order\n        const sortedTodos = [...filteredTodos].sort((a, b) => a.price - b.price);\n\n        let total = 0;\n        const selected = [];\n\n        for (let i = 0; i < sortedTodos.length; i++) {\n            if (total + sortedTodos[i].price <= maxBudget) {\n                total += sortedTodos[i].price;\n                selected.push(sortedTodos[i].id); // Track selected bills\n            } else {\n                break; // Stop adding more bills\n            }\n        }\n\n        setMaxSelectedBills(selected); // Highlight selected bills for max budget\n    };\n\n    const uniqueTypes = [...new Set(todos.map((todo) => todo.type))]; // Get unique types\n\n    return (\n        <div className=\"container\">\n            <ToastContainer />\n            <h1 className=\"main-title\">Billing Dashboard</h1>\n            <TodoForm addTodo={addTodo} />\n            <div className=\"total-price-box\">\n                <h3>\n                    Total Income: $\n                    {todos.reduce((total, todo) => total + todo.price, 0).toFixed(2)}\n                </h3>\n            </div>\n            <div className=\"filter-sort-box\">\n                <label>\n                    Filter by Type:\n                    <select value={sortType} onChange={(e) => setSortType(e.target.value)}>\n                        <option value=\"all\">All</option>\n                        {uniqueTypes.map((type) => (\n                            <option key={type} value={type}>\n                                {type}\n                            </option>\n                        ))}\n                    </select>\n                </label>\n                <label>\n                    Monthly Budget:\n                    <input\n                        type=\"number\"\n                        value={monthlyBudget}\n                        onChange={(e) => setMonthlyBudget(parseFloat(e.target.value) || 0)}\n                        placeholder=\"Enter budget\"\n                    />\n                </label>\n                <button onClick={calculateMinimumBills} className=\"highlight-btn\">\n                    Calculate Minimum Bills\n                </button>\n                <label>\n                    Max Budget:\n                    <input\n                        type=\"number\"\n                        value={maxBudget}\n                        onChange={(e) => setMaxBudget(parseFloat(e.target.value) || 0)}\n                        placeholder=\"Enter max budget\"\n                    />\n                </label>\n                <button onClick={calculateMaximumBills} className=\"highlight-btn max\">\n                    Calculate Max Bills\n                </button>\n            </div>\n            \n            <Todos\n                todos={todos.filter((todo) => sortType === \"all\" || todo.type === sortType)}\n                removeTodo={removeTodo}\n                editTodo={editTodo}\n                selectedBills={selectedBills}\n                maxSelectedBills={maxSelectedBills}\n            />\n\n<MonthlyIncomeChart incomeData={processDataForGraph()} />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"mHAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,CAAAC,kBAAkB,KAAM,sBAAsB,CACrD,OAASC,cAAc,KAAQ,gBAAgB,CAC/C,MAAO,2CAA2C,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAAE;AACjD,KAAM,CAACc,aAAa,CAAEC,gBAAgB,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAAC,CAAE;AACvD,KAAM,CAACgB,SAAS,CAAEC,YAAY,CAAC,CAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAE;AAC/C,KAAM,CAACkB,aAAa,CAAEC,gBAAgB,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAE;AACxD,KAAM,CAACoB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAE9D,KAAM,CAAAsB,OAAO,CAAIC,OAAO,EAAK,CACzBZ,QAAQ,CAAEa,SAAS,EAAK,CAAC,GAAGA,SAAS,CAAED,OAAO,CAAC,CAAC,CACpD,CAAC,CAED,KAAM,CAAAE,UAAU,CAAIC,EAAE,EAAK,CACvBf,QAAQ,CAAEa,SAAS,EAAKA,SAAS,CAACG,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACF,EAAE,GAAKA,EAAE,CAAC,CAAC,CACvE,CAAC,CAED,KAAM,CAAAG,QAAQ,CAAGA,CAACH,EAAE,CAAEI,WAAW,GAAK,CAClCnB,QAAQ,CAAEa,SAAS,EACfA,SAAS,CAACO,GAAG,CAAEH,IAAI,EAAMA,IAAI,CAACF,EAAE,GAAKA,EAAE,CAAAM,aAAA,CAAAA,aAAA,IAAQJ,IAAI,EAAKE,WAAW,EAAKF,IAAK,CACjF,CAAC,CACL,CAAC,CAED,KAAM,CAAAK,mBAAmB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAAC,IAAI,CAAG,CAAC,CAAC,CAEf;AACA,KAAM,CAAAC,aAAa,CAAGvB,QAAQ,GAAK,KAAK,CAAGF,KAAK,CAAGA,KAAK,CAACiB,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACQ,IAAI,GAAKxB,QAAQ,CAAC,CAEjGuB,aAAa,CAACE,OAAO,CAAET,IAAI,EAAK,CAC5B,KAAM,CAAAU,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACX,IAAI,CAACU,IAAI,CAAC,CAChC,KAAM,CAAAE,GAAG,IAAAC,MAAA,CAAMH,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAG,CAAC,MAAAD,MAAA,CAAIH,IAAI,CAACK,WAAW,CAAC,CAAC,CAAE,CAAE;AAC5DT,IAAI,CAACM,GAAG,CAAC,CAAG,CAACN,IAAI,CAACM,GAAG,CAAC,EAAI,CAAC,EAAIZ,IAAI,CAACgB,KAAK,CAC7C,CAAC,CAAC,CAEF,MAAO,CAAAV,IAAI,CACf,CAAC,CAED,KAAM,CAAAW,qBAAqB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAAV,aAAa,CAAGvB,QAAQ,GAAK,KAAK,CAAGF,KAAK,CAAGA,KAAK,CAACiB,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACQ,IAAI,GAAKxB,QAAQ,CAAC,CAEjG;AACA,KAAM,CAAAkC,WAAW,CAAG,CAAC,GAAGX,aAAa,CAAC,CAACY,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACJ,KAAK,CAAGK,CAAC,CAACL,KAAK,CAAC,CAExE,GAAI,CAAAM,KAAK,CAAG,CAAC,CACb,KAAM,CAAAC,QAAQ,CAAG,EAAE,CAEnB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGN,WAAW,CAACO,MAAM,CAAED,CAAC,EAAE,CAAE,CACzC,GAAIF,KAAK,CAAGJ,WAAW,CAACM,CAAC,CAAC,CAACR,KAAK,EAAI9B,aAAa,CAAE,CAC/CoC,KAAK,EAAIJ,WAAW,CAACM,CAAC,CAAC,CAACR,KAAK,CAC7BO,QAAQ,CAACG,IAAI,CAACR,WAAW,CAACM,CAAC,CAAC,CAAC1B,EAAE,CAAC,CAAE;AACtC,CAAC,IAAM,CACH,MAAO;AACX,CACJ,CAEAP,gBAAgB,CAACgC,QAAQ,CAAC,CAAE;AAChC,CAAC,CAED,KAAM,CAAAI,qBAAqB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAApB,aAAa,CAAGvB,QAAQ,GAAK,KAAK,CAAGF,KAAK,CAAGA,KAAK,CAACiB,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACQ,IAAI,GAAKxB,QAAQ,CAAC,CAEjG;AACA,KAAM,CAAAkC,WAAW,CAAG,CAAC,GAAGX,aAAa,CAAC,CAACY,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACJ,KAAK,CAAGK,CAAC,CAACL,KAAK,CAAC,CAExE,GAAI,CAAAM,KAAK,CAAG,CAAC,CACb,KAAM,CAAAC,QAAQ,CAAG,EAAE,CAEnB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGN,WAAW,CAACO,MAAM,CAAED,CAAC,EAAE,CAAE,CACzC,GAAIF,KAAK,CAAGJ,WAAW,CAACM,CAAC,CAAC,CAACR,KAAK,EAAI5B,SAAS,CAAE,CAC3CkC,KAAK,EAAIJ,WAAW,CAACM,CAAC,CAAC,CAACR,KAAK,CAC7BO,QAAQ,CAACG,IAAI,CAACR,WAAW,CAACM,CAAC,CAAC,CAAC1B,EAAE,CAAC,CAAE;AACtC,CAAC,IAAM,CACH,MAAO;AACX,CACJ,CAEAL,mBAAmB,CAAC8B,QAAQ,CAAC,CAAE;AACnC,CAAC,CAED,KAAM,CAAAK,WAAW,CAAG,CAAC,GAAG,GAAI,CAAAC,GAAG,CAAC/C,KAAK,CAACqB,GAAG,CAAEH,IAAI,EAAKA,IAAI,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAE;AAElE,mBACI5B,KAAA,QAAKkD,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtBrD,IAAA,CAACF,cAAc,GAAE,CAAC,cAClBE,IAAA,OAAIoD,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,mBAAiB,CAAI,CAAC,cACjDrD,IAAA,CAACL,QAAQ,EAACqB,OAAO,CAAEA,OAAQ,CAAE,CAAC,cAC9BhB,IAAA,QAAKoD,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC5BnD,KAAA,OAAAmD,QAAA,EAAI,iBAEA,CAACjD,KAAK,CAACkD,MAAM,CAAC,CAACV,KAAK,CAAEtB,IAAI,GAAKsB,KAAK,CAAGtB,IAAI,CAACgB,KAAK,CAAE,CAAC,CAAC,CAACiB,OAAO,CAAC,CAAC,CAAC,EAChE,CAAC,CACJ,CAAC,cACNrD,KAAA,QAAKkD,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC5BnD,KAAA,UAAAmD,QAAA,EAAO,iBAEH,cAAAnD,KAAA,WAAQsD,KAAK,CAAElD,QAAS,CAACmD,QAAQ,CAAGC,CAAC,EAAKnD,WAAW,CAACmD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAAH,QAAA,eAClErD,IAAA,WAAQwD,KAAK,CAAC,KAAK,CAAAH,QAAA,CAAC,KAAG,CAAQ,CAAC,CAC/BH,WAAW,CAACzB,GAAG,CAAEK,IAAI,eAClB9B,IAAA,WAAmBwD,KAAK,CAAE1B,IAAK,CAAAuB,QAAA,CAC1BvB,IAAI,EADIA,IAEL,CACX,CAAC,EACE,CAAC,EACN,CAAC,cACR5B,KAAA,UAAAmD,QAAA,EAAO,iBAEH,cAAArD,IAAA,UACI8B,IAAI,CAAC,QAAQ,CACb0B,KAAK,CAAEhD,aAAc,CACrBiD,QAAQ,CAAGC,CAAC,EAAKjD,gBAAgB,CAACmD,UAAU,CAACF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,EAAI,CAAC,CAAE,CACnEK,WAAW,CAAC,cAAc,CAC7B,CAAC,EACC,CAAC,cACR7D,IAAA,WAAQ8D,OAAO,CAAEvB,qBAAsB,CAACa,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,yBAElE,CAAQ,CAAC,cACTnD,KAAA,UAAAmD,QAAA,EAAO,aAEH,cAAArD,IAAA,UACI8B,IAAI,CAAC,QAAQ,CACb0B,KAAK,CAAE9C,SAAU,CACjB+C,QAAQ,CAAGC,CAAC,EAAK/C,YAAY,CAACiD,UAAU,CAACF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,EAAI,CAAC,CAAE,CAC/DK,WAAW,CAAC,kBAAkB,CACjC,CAAC,EACC,CAAC,cACR7D,IAAA,WAAQ8D,OAAO,CAAEb,qBAAsB,CAACG,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,qBAEtE,CAAQ,CAAC,EACR,CAAC,cAENrD,IAAA,CAACJ,KAAK,EACFQ,KAAK,CAAEA,KAAK,CAACiB,MAAM,CAAEC,IAAI,EAAKhB,QAAQ,GAAK,KAAK,EAAIgB,IAAI,CAACQ,IAAI,GAAKxB,QAAQ,CAAE,CAC5Ea,UAAU,CAAEA,UAAW,CACvBI,QAAQ,CAAEA,QAAS,CACnBX,aAAa,CAAEA,aAAc,CAC7BE,gBAAgB,CAAEA,gBAAiB,CACtC,CAAC,cAEdd,IAAA,CAACH,kBAAkB,EAACkE,UAAU,CAAEpC,mBAAmB,CAAC,CAAE,CAAE,CAAC,EAC5C,CAAC,CAEd,CAEA,cAAe,CAAAxB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}