{"ast":null,"code":"import{useState}from\"react\";import{v4 as uuid}from\"uuid\";import{toast}from\"react-toastify\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TodoForm(_ref){let{addTodo}=_ref;const[title,setTitle]=useState(\"\");const[type,setType]=useState(\"\");const[price,setPrice]=useState(\"\");const[date,setDate]=useState(\"\");const handleSubmit=e=>{e.preventDefault();if(!title.trim()||!type.trim()||!price.trim()||!date.trim()){toast.info(\"Please fill all fields!\",{autoClose:2000});return;}const newTodo={id:uuid(),title,type,price:parseFloat(price),date// Use manually entered date\n};addTodo(newTodo);setTitle(\"\");setType(\"\");setPrice(\"\");setDate(\"\");};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"todoForm\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"todoForm__input\",placeholder:\"Title\",value:title,onChange:e=>setTitle(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"todoForm__input\",placeholder:\"Type\",value:type,onChange:e=>setType(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"todoForm__input\",placeholder:\"Price\",value:price,onChange:e=>setPrice(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",className:\"todoForm__input\",value:date,onChange:e=>setDate(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"todoForm__btn\",children:\"Add\"})]});}export default TodoForm;","map":{"version":3,"names":["useState","v4","uuid","toast","jsx","_jsx","jsxs","_jsxs","TodoForm","_ref","addTodo","title","setTitle","type","setType","price","setPrice","date","setDate","handleSubmit","e","preventDefault","trim","info","autoClose","newTodo","id","parseFloat","onSubmit","className","children","placeholder","value","onChange","target"],"sources":["C:/Users/mukul singh/bill/bill/src/TodoForm.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction TodoForm({ addTodo }) {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!title.trim() || !type.trim() || !price.trim() || !date.trim()) {\r\n            toast.info(\"Please fill all fields!\", { autoClose: 2000 });\r\n            return;\r\n        }\r\n        const newTodo = {\r\n            id: uuid(),\r\n            title,\r\n            type,\r\n            price: parseFloat(price),\r\n            date, // Use manually entered date\r\n        };\r\n        addTodo(newTodo);\r\n        setTitle(\"\");\r\n        setType(\"\");\r\n        setPrice(\"\");\r\n        setDate(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"todoForm\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"todoForm__input\"\r\n                placeholder=\"Title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                className=\"todoForm__input\"\r\n                placeholder=\"Type\"\r\n                value={type}\r\n                onChange={(e) => setType(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                className=\"todoForm__input\"\r\n                placeholder=\"Price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"date\"\r\n                className=\"todoForm__input\"\r\n                value={date}\r\n                onChange={(e) => setDate(e.target.value)}\r\n            />\r\n            <button type=\"submit\" className=\"todoForm__btn\">\r\n                Add\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,EAAE,GAAI,CAAAC,IAAI,KAAQ,MAAM,CACjC,OAASC,KAAK,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvC,QAAS,CAAAC,QAAQA,CAAAC,IAAA,CAAc,IAAb,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CACzB,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACiB,IAAI,CAAEC,OAAO,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAEpC,KAAM,CAAAmB,YAAY,CAAIC,CAAC,EAAK,CACxBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CAACV,KAAK,CAACW,IAAI,CAAC,CAAC,EAAI,CAACT,IAAI,CAACS,IAAI,CAAC,CAAC,EAAI,CAACP,KAAK,CAACO,IAAI,CAAC,CAAC,EAAI,CAACL,IAAI,CAACK,IAAI,CAAC,CAAC,CAAE,CAChEnB,KAAK,CAACoB,IAAI,CAAC,yBAAyB,CAAE,CAAEC,SAAS,CAAE,IAAK,CAAC,CAAC,CAC1D,OACJ,CACA,KAAM,CAAAC,OAAO,CAAG,CACZC,EAAE,CAAExB,IAAI,CAAC,CAAC,CACVS,KAAK,CACLE,IAAI,CACJE,KAAK,CAAEY,UAAU,CAACZ,KAAK,CAAC,CACxBE,IAAM;AACV,CAAC,CACDP,OAAO,CAACe,OAAO,CAAC,CAChBb,QAAQ,CAAC,EAAE,CAAC,CACZE,OAAO,CAAC,EAAE,CAAC,CACXE,QAAQ,CAAC,EAAE,CAAC,CACZE,OAAO,CAAC,EAAE,CAAC,CACf,CAAC,CAED,mBACIX,KAAA,SAAMqB,QAAQ,CAAET,YAAa,CAACU,SAAS,CAAC,UAAU,CAAAC,QAAA,eAC9CzB,IAAA,UACIQ,IAAI,CAAC,MAAM,CACXgB,SAAS,CAAC,iBAAiB,CAC3BE,WAAW,CAAC,OAAO,CACnBC,KAAK,CAAErB,KAAM,CACbsB,QAAQ,CAAGb,CAAC,EAAKR,QAAQ,CAACQ,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE,CAC7C,CAAC,cACF3B,IAAA,UACIQ,IAAI,CAAC,MAAM,CACXgB,SAAS,CAAC,iBAAiB,CAC3BE,WAAW,CAAC,MAAM,CAClBC,KAAK,CAAEnB,IAAK,CACZoB,QAAQ,CAAGb,CAAC,EAAKN,OAAO,CAACM,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE,CAC5C,CAAC,cACF3B,IAAA,UACIQ,IAAI,CAAC,QAAQ,CACbgB,SAAS,CAAC,iBAAiB,CAC3BE,WAAW,CAAC,OAAO,CACnBC,KAAK,CAAEjB,KAAM,CACbkB,QAAQ,CAAGb,CAAC,EAAKJ,QAAQ,CAACI,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE,CAC7C,CAAC,cACF3B,IAAA,UACIQ,IAAI,CAAC,MAAM,CACXgB,SAAS,CAAC,iBAAiB,CAC3BG,KAAK,CAAEf,IAAK,CACZgB,QAAQ,CAAGb,CAAC,EAAKF,OAAO,CAACE,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE,CAC5C,CAAC,cACF3B,IAAA,WAAQQ,IAAI,CAAC,QAAQ,CAACgB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,KAEhD,CAAQ,CAAC,EACP,CAAC,CAEf,CAEA,cAAe,CAAAtB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}